// @generated by Thrift for [[[ program path ]]]
// This file is probably not the place you want to edit!

package metadata // [[[ program thrift source path ]]]

import (
    thrift "github.com/facebook/fbthrift/thrift/lib/go/thrift"
)

// mapsCopy is a copy of maps.Copy from Go 1.21
// TODO: remove mapsCopy once we can safely upgrade to Go 1.21 without requiring any rollback.
func mapsCopy[M1 ~map[K]V, M2 ~map[K]V, K comparable, V any](dst M1, src M2) {
	for k, v := range src {
		dst[k] = v
	}
}

// (needed to ensure safety because of naive import list construction)
var _ = thrift.ZERO
// TODO: uncomment when can safely upgrade to Go 1.21 without requiring any rollback.
// var _ = maps.Copy[map[int]int, map[int]int]

// Premade Thrift types
var (
    premadeThriftType_metadata_ThriftConstValue = NewThriftType().SetTUnion(
        NewThriftUnionType().
            SetName("metadata.ThriftConstValue"),
            )
    premadeThriftType_bool = NewThriftType().SetTPrimitive(
        ThriftPrimitiveType_THRIFT_BOOL_TYPE.Ptr(),
            )
    premadeThriftType_i64 = NewThriftType().SetTPrimitive(
        ThriftPrimitiveType_THRIFT_I64_TYPE.Ptr(),
            )
    premadeThriftType_double = NewThriftType().SetTPrimitive(
        ThriftPrimitiveType_THRIFT_DOUBLE_TYPE.Ptr(),
            )
    premadeThriftType_string = NewThriftType().SetTPrimitive(
        ThriftPrimitiveType_THRIFT_STRING_TYPE.Ptr(),
            )
    premadeThriftType_metadata_ThriftConstValuePair = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftConstValuePair"),
            )
    premadeThriftType_list_metadata_ThriftConstValuePair = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftConstValuePair),
            )
    premadeThriftType_list_metadata_ThriftConstValue = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftConstValue),
            )
    premadeThriftType_metadata_ThriftConstStruct = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftConstStruct"),
            )
    premadeThriftType_metadata_ThriftStructType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftStructType"),
            )
    premadeThriftType_map_string_metadata_ThriftConstValue = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_metadata_ThriftConstValue),
            )
    premadeThriftType_metadata_ThriftType = NewThriftType().SetTUnion(
        NewThriftUnionType().
            SetName("metadata.ThriftType"),
            )
    premadeThriftType_list_metadata_ThriftConstStruct = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftConstStruct),
            )
    premadeThriftType_metadata_ThriftPrimitiveType = NewThriftType().SetTEnum(
        NewThriftEnumType().
            SetName("metadata.ThriftPrimitiveType"),
            )
    premadeThriftType_metadata_ThriftListType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftListType"),
            )
    premadeThriftType_metadata_ThriftSetType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftSetType"),
            )
    premadeThriftType_metadata_ThriftMapType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftMapType"),
            )
    premadeThriftType_metadata_ThriftEnumType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftEnumType"),
            )
    premadeThriftType_metadata_ThriftUnionType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftUnionType"),
            )
    premadeThriftType_metadata_ThriftTypedefType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftTypedefType"),
            )
    premadeThriftType_metadata_ThriftStreamType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftStreamType"),
            )
    premadeThriftType_metadata_ThriftSinkType = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftSinkType"),
            )
    premadeThriftType_i32 = NewThriftType().SetTPrimitive(
        ThriftPrimitiveType_THRIFT_I32_TYPE.Ptr(),
            )
    premadeThriftType_map_i32_string = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_i32).
            SetValueType(premadeThriftType_string),
            )
    premadeThriftType_map_string_string = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_string),
            )
    premadeThriftType_metadata_ThriftField = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftField"),
            )
    premadeThriftType_list_metadata_ThriftField = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftField),
            )
    premadeThriftType_metadata_ThriftFunction = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftFunction"),
            )
    premadeThriftType_list_metadata_ThriftFunction = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftFunction),
            )
    premadeThriftType_metadata_ThriftService = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftService"),
            )
    premadeThriftType_metadata_ThriftModuleContext = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftModuleContext"),
            )
    premadeThriftType_metadata_ThriftServiceContext = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftServiceContext"),
            )
    premadeThriftType_metadata_ThriftMetadata = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftMetadata"),
            )
    premadeThriftType_metadata_ThriftServiceContextRef = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftServiceContextRef"),
            )
    premadeThriftType_list_metadata_ThriftServiceContextRef = NewThriftType().SetTList(
        NewThriftListType().
            SetValueType(premadeThriftType_metadata_ThriftServiceContextRef),
            )
    premadeThriftType_metadata_ThriftEnum = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftEnum"),
            )
    premadeThriftType_map_string_metadata_ThriftEnum = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_metadata_ThriftEnum),
            )
    premadeThriftType_metadata_ThriftStruct = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftStruct"),
            )
    premadeThriftType_map_string_metadata_ThriftStruct = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_metadata_ThriftStruct),
            )
    premadeThriftType_metadata_ThriftException = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftException"),
            )
    premadeThriftType_map_string_metadata_ThriftException = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_metadata_ThriftException),
            )
    premadeThriftType_map_string_metadata_ThriftService = NewThriftType().SetTMap(
        NewThriftMapType().
            SetKeyType(premadeThriftType_string).
            SetValueType(premadeThriftType_metadata_ThriftService),
            )
    premadeThriftType_metadata_ThriftServiceMetadataResponse = NewThriftType().SetTStruct(
        NewThriftStructType().
            SetName("metadata.ThriftServiceMetadataResponse"),
            )
)

var structMetadatas = []*ThriftStruct{
    NewThriftStruct().
    SetName("metadata.ThriftConstValuePair").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("key").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftConstValue),
            NewThriftField().
    SetId(2).
    SetName("value").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftConstValue),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftConstValue").
    SetIsUnion(true).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("cv_bool").
    SetIsOptional(false).
    SetType(premadeThriftType_bool),
            NewThriftField().
    SetId(2).
    SetName("cv_integer").
    SetIsOptional(false).
    SetType(premadeThriftType_i64),
            NewThriftField().
    SetId(3).
    SetName("cv_double").
    SetIsOptional(false).
    SetType(premadeThriftType_double),
            NewThriftField().
    SetId(4).
    SetName("cv_string").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(5).
    SetName("cv_map").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstValuePair),
            NewThriftField().
    SetId(6).
    SetName("cv_list").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstValue),
            NewThriftField().
    SetId(7).
    SetName("cv_struct").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftConstStruct").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("type").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftStructType),
            NewThriftField().
    SetId(2).
    SetName("fields").
    SetIsOptional(false).
    SetType(premadeThriftType_map_string_metadata_ThriftConstValue),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftListType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("valueType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftSetType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("valueType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftMapType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("keyType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(2).
    SetName("valueType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftEnumType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftStructType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftUnionType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftTypedefType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("underlyingType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(3).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftStreamType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("elemType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(2).
    SetName("initialResponseType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftSinkType").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("elemType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(2).
    SetName("finalResponseType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(3).
    SetName("initialResponseType").
    SetIsOptional(true).
    SetType(premadeThriftType_metadata_ThriftType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftType").
    SetIsUnion(true).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("t_primitive").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftPrimitiveType),
            NewThriftField().
    SetId(2).
    SetName("t_list").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftListType),
            NewThriftField().
    SetId(3).
    SetName("t_set").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftSetType),
            NewThriftField().
    SetId(4).
    SetName("t_map").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftMapType),
            NewThriftField().
    SetId(5).
    SetName("t_enum").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftEnumType),
            NewThriftField().
    SetId(6).
    SetName("t_struct").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftStructType),
            NewThriftField().
    SetId(7).
    SetName("t_union").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftUnionType),
            NewThriftField().
    SetId(8).
    SetName("t_typedef").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftTypedefType),
            NewThriftField().
    SetId(9).
    SetName("t_stream").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftStreamType),
            NewThriftField().
    SetId(10).
    SetName("t_sink").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftSinkType),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftEnum").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("elements").
    SetIsOptional(false).
    SetType(premadeThriftType_map_i32_string),
            NewThriftField().
    SetId(3).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftField").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("id").
    SetIsOptional(false).
    SetType(premadeThriftType_i32),
            NewThriftField().
    SetId(2).
    SetName("type").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(3).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(4).
    SetName("is_optional").
    SetIsOptional(false).
    SetType(premadeThriftType_bool),
            NewThriftField().
    SetId(5).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
            NewThriftField().
    SetId(6).
    SetName("unstructured_annotations").
    SetIsOptional(true).
    SetType(premadeThriftType_map_string_string),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftStruct").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("fields").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftField),
            NewThriftField().
    SetId(3).
    SetName("is_union").
    SetIsOptional(false).
    SetType(premadeThriftType_bool),
            NewThriftField().
    SetId(4).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftException").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("fields").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftField),
            NewThriftField().
    SetId(3).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftFunction").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("return_type").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftType),
            NewThriftField().
    SetId(3).
    SetName("arguments").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftField),
            NewThriftField().
    SetId(4).
    SetName("exceptions").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftField),
            NewThriftField().
    SetId(5).
    SetName("is_oneway").
    SetIsOptional(false).
    SetType(premadeThriftType_bool),
            NewThriftField().
    SetId(6).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftService").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("functions").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftFunction),
            NewThriftField().
    SetId(3).
    SetName("parent").
    SetIsOptional(true).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(4).
    SetName("structured_annotations").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftConstStruct),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftModuleContext").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftServiceContext").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("service_info").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftService),
            NewThriftField().
    SetId(2).
    SetName("module").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftModuleContext),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftServiceContextRef").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("service_name").
    SetIsOptional(false).
    SetType(premadeThriftType_string),
            NewThriftField().
    SetId(2).
    SetName("module").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftModuleContext),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftServiceMetadataResponse").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(1).
    SetName("context").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftServiceContext),
            NewThriftField().
    SetId(2).
    SetName("metadata").
    SetIsOptional(false).
    SetType(premadeThriftType_metadata_ThriftMetadata),
            NewThriftField().
    SetId(3).
    SetName("services").
    SetIsOptional(false).
    SetType(premadeThriftType_list_metadata_ThriftServiceContextRef),
        },
    ),
    NewThriftStruct().
    SetName("metadata.ThriftMetadata").
    SetIsUnion(false).
    SetFields(
        []*ThriftField{
            NewThriftField().
    SetId(2).
    SetName("enums").
    SetIsOptional(false).
    SetType(premadeThriftType_map_string_metadata_ThriftEnum),
            NewThriftField().
    SetId(4).
    SetName("structs").
    SetIsOptional(false).
    SetType(premadeThriftType_map_string_metadata_ThriftStruct),
            NewThriftField().
    SetId(5).
    SetName("exceptions").
    SetIsOptional(false).
    SetType(premadeThriftType_map_string_metadata_ThriftException),
            NewThriftField().
    SetId(6).
    SetName("services").
    SetIsOptional(false).
    SetType(premadeThriftType_map_string_metadata_ThriftService),
        },
    ),
}

var exceptionMetadatas = []*ThriftException{
}

var enumMetadatas = []*ThriftEnum{
    NewThriftEnum().
    SetName("metadata.ThriftPrimitiveType").
    SetElements(
        map[int32]string{
            1: "THRIFT_BOOL_TYPE",
            2: "THRIFT_BYTE_TYPE",
            3: "THRIFT_I16_TYPE",
            4: "THRIFT_I32_TYPE",
            5: "THRIFT_I64_TYPE",
            6: "THRIFT_FLOAT_TYPE",
            7: "THRIFT_DOUBLE_TYPE",
            8: "THRIFT_BINARY_TYPE",
            9: "THRIFT_STRING_TYPE",
            10: "THRIFT_VOID_TYPE",
        },
    ),
}

var serviceMetadatas = []*ThriftService{
    NewThriftService().
    SetName("metadata.ThriftMetadataService").
    SetFunctions(
        []*ThriftFunction{
            NewThriftFunction().
    SetName("getThriftServiceMetadata").
    SetIsOneway(false).
    SetReturnType(premadeThriftType_metadata_ThriftServiceMetadataResponse),
        },
    ),
}

// GetThriftMetadata returns complete Thrift metadata for current and imported packages.
func GetThriftMetadata() *ThriftMetadata {
    allEnums := GetEnumsMetadata()
    allStructs := GetStructsMetadata()
    allExceptions := GetExceptionsMetadata()
    allServices := GetServicesMetadata()

    return NewThriftMetadata().
        SetEnums(allEnums).
        SetStructs(allStructs).
        SetExceptions(allExceptions).
        SetServices(allServices)
}

// GetEnumsMetadata returns Thrift metadata for enums in the current and recursively included packages.
func GetEnumsMetadata() map[string]*ThriftEnum {
    allEnumsMap := make(map[string]*ThriftEnum)

    // Add enum metadatas from the current program...
    for _, enumMetadata := range enumMetadatas {
        allEnumsMap[enumMetadata.GetName()] = enumMetadata
    }

    // ...now add enum metadatas from recursively included programs.

    return allEnumsMap
}

// GetStructsMetadata returns Thrift metadata for structs in the current and recursively included packages.
func GetStructsMetadata() map[string]*ThriftStruct {
    allStructsMap := make(map[string]*ThriftStruct)

    // Add struct metadatas from the current program...
    for _, structMetadata := range structMetadatas {
        allStructsMap[structMetadata.GetName()] = structMetadata
    }

    // ...now add struct metadatas from recursively included programs.

    return allStructsMap
}

// GetExceptionsMetadata returns Thrift metadata for exceptions in the current and recursively included packages.
func GetExceptionsMetadata() map[string]*ThriftException {
    allExceptionsMap := make(map[string]*ThriftException)

    // Add exception metadatas from the current program...
    for _, exceptionMetadata := range exceptionMetadatas {
        allExceptionsMap[exceptionMetadata.GetName()] = exceptionMetadata
    }

    // ...now add exception metadatas from recursively included programs.

    return allExceptionsMap
}

// GetServicesMetadata returns Thrift metadata for services in the current and recursively included packages.
func GetServicesMetadata() map[string]*ThriftService {
    allServicesMap := make(map[string]*ThriftService)

    // Add service metadatas from the current program...
    for _, serviceMetadata := range serviceMetadatas {
        allServicesMap[serviceMetadata.GetName()] = serviceMetadata
    }

    // ...now add service metadatas from recursively included programs.

    return allServicesMap
}

// GetThriftMetadataForService returns Thrift metadata for the given service.
func GetThriftMetadataForService(scopedServiceName string) *ThriftMetadata {
    thriftMetadata := GetThriftMetadata()

    allServicesMap := thriftMetadata.GetServices()
    relevantServicesMap := make(map[string]*ThriftService)

    serviceMetadata := allServicesMap[scopedServiceName]
    // Visit and record all recursive parents of the target service.
    for serviceMetadata != nil {
        relevantServicesMap[serviceMetadata.GetName()] = serviceMetadata
        if serviceMetadata.IsSetParent() {
            serviceMetadata = allServicesMap[serviceMetadata.GetParent()]
        } else {
            serviceMetadata = nil
        }
    }

    thriftMetadata.SetServices(relevantServicesMap)

    return thriftMetadata
}
